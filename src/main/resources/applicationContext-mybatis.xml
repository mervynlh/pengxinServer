<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
		<property name="dataSource" ref="dataSource" />  
	</bean> 
	
	<!-- 配置SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 参数：数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 参数：配置实体 -->
		<!-- <property name="configLocation" value="classpath:/mybatis/data/sqlMapConfig.xml" /> -->
		<property name="configLocation"  value="classpath:/SqlMapConfig.xml"/>
		<!-- 参数：mapper文件集合 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:/mybatis/**/*Mapper.xml</value>
			</list>
		</property>
		<property name="typeAliasesPackage" value="com.drpeng.pengxin.api.domain" />
		
	</bean>
	<bean id="sqlSessionMain" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>


	<!-- 通过扫描指定目录下所有Mapper，所有的Mapper都继承了SqlMapper接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.drpeng.pengxin.api.dao" />
	</bean>


</beans>